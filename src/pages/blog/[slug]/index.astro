---
import { getEntry, render } from "astro:content";
import Head from "@/components/Head.astro";
import BlogLayout from "@/layouts/BlogLayout.astro";
import { Image } from "astro:assets";
import { cn } from "@/lib/utils";
import { Icon } from "astro-icon/components";
import { getCollection } from "astro:content";
import type { GetStaticPaths } from "astro";

export const getStaticPaths = (async () => {
  const blog = await getCollection("blog");
  return blog
    .filter((a) => a.data.published)
    .map(({ id }) => ({ params: { slug: id } }));
}) satisfies GetStaticPaths;

const { slug } = Astro.params;
const article = await getEntry("blog", slug);
if (!article || !article.data.published) {
  throw new Error("Could not find blog post 1");
}
const { Content, headings } = await render(article);
---

<Head title={article.data.title} />
<BlogLayout headings={headings}>
  <slot slot="details">
    {
      article.data.heroImage && (
        <Image
          src={article.data.heroImage}
          alt={"Image for " + article.data.title}
          class={"w-full max-h-[400px] object-contain aspect-square rounded-lg"}
        />
      )
    }
    <h1 class={cn("text-4xl font-bold mt-10")}>{article.data.title}</h1>
    <p class={cn("text-lg mt-4")}>{article.data.description}</p>
    <ol class="flex gap-4 mt-4">
      {
        article.data.tags.map(async ({ id: tagId }) => {
          const tag = await getEntry("tags", tagId);
          if (!tag) {
            return null;
          }
          return (
            <li class={cn("text-sm text-neutral-500 dark:text-neutral-400")}>
              <Icon
                name={tag.data.icon}
                class={cn("w-4 h-4 inline-block mr-2")}
              />
              {tag.data.text}
            </li>
          );
        })
      }
    </ol>
  </slot>
  <slot slot="content">
    <Content />
  </slot>
</BlogLayout>
